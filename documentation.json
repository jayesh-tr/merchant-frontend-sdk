{
  "pipes": [],
  "interfaces": [
    {
      "name": "Datum",
      "id": "interface-Datum-7b8103af8560a40160d12cf385d31d3e",
      "file": "projects/ng9-business-console/src/lib/models/product-model.ts",
      "type": "interface",
      "sourceCode": "export interface Datum {\n  productID: string;\n  businessID: string;\n  categoryID?: number;\n  tags?: any;\n  productName: string;\n  productDescription?: any;\n  creationTimestamp: string;\n  lastUpdateTimestamp: string;\n  productUrl: string;\n  imageUrl: string;\n  verified: boolean;\n  usdTotalEarnings: string;\n  eurTotalEarnings: string;\n  jpyTotalEarnings: string;\n  gbpTotalEarnings: string;\n  activeCustomers: number;\n  numOfBilling: number;\n  enabled: boolean;\n  totalEarnings: number;\n  status: string;\n}\n",
      "properties": [
        {
          "name": "activeCustomers",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "businessID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "categoryID",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "creationTimestamp",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "enabled",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "eurTotalEarnings",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "gbpTotalEarnings",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "imageUrl",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "jpyTotalEarnings",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "lastUpdateTimestamp",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "numOfBilling",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "productDescription",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "productID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "productName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "productUrl",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "status",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "tags",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 5
        },
        {
          "name": "totalEarnings",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "usdTotalEarnings",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "verified",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IErrorMessage",
      "id": "interface-IErrorMessage-65562b175398669a6bf8342d79569866",
      "file": "projects/showcase/src/app/app.component.ts",
      "type": "interface",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n  ProductService,\n  Datum,\n  AuthenticationService,\n  User,\n} from '@ng9/business-console';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'showcase-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  public data: Array<Datum>;\n  public columns: Array<string>;\n  public isError: IErrorMessage = {\n    status: false,\n  };\n\n  constructor(\n    public productService: ProductService,\n    public authenticationService: AuthenticationService\n  ) {\n    this.columns = [\n      'status',\n      'productName',\n      'totalEarnings',\n      'activeCustomers',\n      'numOfBilling',\n      'ropstenNetworkOn',\n      'creationTimestamp',\n      'columnClicked',\n    ];\n  }\n\n  ngOnInit(): void {\n    this.authenticationService\n      .userAuthentication(environment.username, environment.password)\n      .then(async (response) => {\n        if (response.success) {\n          this.storeTokenAndStartTimer(response.data.user, response.data.token);\n          this.getAllProduct();\n        } else {\n          this.isError = {\n            status: true,\n            message: 'Authentication failed!',\n          };\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.isError = {\n          status: true,\n          message: error.error.message\n            ? error.error.message\n            : 'Invalid email/password OR might be server not found!',\n        };\n      });\n  }\n\n  public storeTokenAndStartTimer(user: User, token: string) {\n    localStorage.setItem('jwt_token', JSON.stringify({ token }));\n    localStorage.setItem('currentUser', JSON.stringify(user));\n  }\n\n  public getAllProduct() {\n    this.productService\n      .getProductList(this.getBusinessID(), this.getToken())\n      .subscribe(\n        (result: any) => {\n          const productData = result.data;\n          this.data =\n            result.success && productData && productData.length > 0\n              ? result.data\n              : [];\n        },\n        (error) => {\n          this.isError = {\n            status: true,\n            message: error.error.message || error.error[0].message,\n          };\n        }\n      );\n  }\n\n  public getToken(): string {\n    let jwtToken = localStorage.getItem('jwt_token');\n    return (jwtToken = jwtToken ? JSON.parse(jwtToken).token : '');\n  }\n\n  public getBusinessID(): string {\n    let userDetails = localStorage.getItem('currentUser');\n    return (userDetails = userDetails\n      ? JSON.parse(userDetails).businessID\n      : '');\n  }\n}\n\nexport interface IErrorMessage {\n  status?: boolean;\n  message?: string;\n}\n",
      "properties": [
        {
          "name": "message",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 103
        },
        {
          "name": "status",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 102
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "Schema",
      "id": "interface-Schema-657e387ddd64f65d27ccdb105df37e6c",
      "file": "projects/ng9-business-console/schematics/product-table/schema.ts",
      "type": "interface",
      "sourceCode": "export interface Schema {\n  // The name of the service.\n  name: string;\n\n  // The path to create the service.\n  path?: string;\n\n  // The name of the project.\n  project?: string;\n}\n",
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "path",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "project",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 9
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "User",
      "id": "interface-User-94129b8263267b83bbfcd9de1159a839",
      "file": "projects/ng9-business-console/src/lib/models/authentication-model.ts",
      "type": "interface",
      "sourceCode": "export interface User {\n  userID: string;\n  username: string;\n  fullName: string;\n  mobileNumber: string;\n  salt: string;\n  hash: string;\n  temporatySalt: string;\n  temporaryHash: string;\n  email: string;\n  completedRegistration: string;\n  registrationDate: number;\n  groupID: string;\n  lockoutCounter: number;\n  louckoutYN: boolean;\n  verified: boolean;\n  acceptedTermsAndConditions: boolean;\n  onBoardingCompleted: boolean;\n  businessID: string;\n}\n\nexport class HttpResponse {\n  success: boolean;\n  status: string;\n  message: string;\n  sessionID?: string;\n  data?: any;\n  token?: string;\n  error?: string;\n  user?: User;\n  errcode?: string;\n}\n",
      "properties": [
        {
          "name": "acceptedTermsAndConditions",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "businessID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "completedRegistration",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "email",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "fullName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "groupID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "hash",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "lockoutCounter",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "louckoutYN",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "mobileNumber",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "onBoardingCompleted",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "registrationDate",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "salt",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "temporaryHash",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "temporatySalt",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "userID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "username",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "verified",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    }
  ],
  "injectables": [
    {
      "name": "AuthenticationService",
      "id": "injectable-AuthenticationService-bc8c4588923ee4c60bd66c00c715125e",
      "file": "projects/ng9-business-console/src/lib/services/authentication/authentication.service.ts",
      "properties": [
        {
          "name": "actionUrl",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [114]
        }
      ],
      "methods": [
        {
          "name": "getAuthHeaders",
          "args": [
            {
              "name": "token",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "HttpHeaders",
          "typeParameters": [],
          "line": 28,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "token",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "userAuthentication",
          "args": [
            {
              "name": "email",
              "type": "string"
            },
            {
              "name": "password",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "Promise<any>",
          "typeParameters": [],
          "line": 17,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "email",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "password",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { HttpResponse } from '../../models/authentication-model';\nimport { constant } from '../../utils/server-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  public actionUrl: string;\n\n  public constructor(private http: HttpClient) {\n    this.actionUrl = `${constant.socketUrl}${constant.openApiPrefix}login`;\n  }\n\n  public userAuthentication(email: string, password: string): Promise<any> {\n    return this.http\n      .post<any>(this.actionUrl, { email, password })\n      .pipe(\n        map((response: HttpResponse) => {\n          return response;\n        })\n      )\n      .toPromise();\n  }\n\n  public getAuthHeaders(token: string): HttpHeaders {\n    let headers = new HttpHeaders();\n\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append('api-request-source', 'pma-biz-console');\n    headers = headers.append('x-access-token', token);\n    headers = headers.append('Authorization', `Bearer ${token}`);\n\n    return headers;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "http",
            "type": "HttpClient"
          }
        ],
        "line": 11,
        "modifierKind": [114],
        "jsdoctags": [
          {
            "name": "http",
            "type": "HttpClient",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "FooterService",
      "id": "injectable-FooterService-e8f11b81d4e55e31f400d528c202cc66",
      "file": "projects/ng9-business-console/src/lib/services/footer/footer.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "add",
          "args": [
            {
              "name": "params",
              "type": "number[]",
              "dotDotDotToken": true
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 9,
          "jsdoctags": [
            {
              "name": "params",
              "type": "number[]",
              "dotDotDotToken": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FooterService {\n  constructor() {}\n\n  add(...params: number[]): number {\n    let result = 0;\n    for (const val of params) {\n      result += val;\n    }\n    return result;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 6
      },
      "type": "injectable"
    },
    {
      "name": "ProductService",
      "id": "injectable-ProductService-84c3fbfe337f78932bc4b51e39bb956a",
      "file": "projects/ng9-business-console/src/lib/services/product/product.service.ts",
      "properties": [
        {
          "name": "actionUrl",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [112]
        }
      ],
      "methods": [
        {
          "name": "getProductList",
          "args": [
            {
              "name": "businessID",
              "type": "string"
            },
            {
              "name": "token",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 21,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "businessID",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "token",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { HttpResponse } from '../../models/authentication-model';\nimport { constant } from '../../utils/server-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private actionUrl: string;\n\n  constructor(\n    private http: HttpClient,\n    private authenticationService: AuthenticationService\n  ) {\n    this.actionUrl = `${constant.socketUrl}${constant.apiPrefix}`;\n  }\n\n  public getProductList(businessID: string, token: string) {\n    const apiUrl = `${this.actionUrl}products/all/${businessID}/1`;\n    return this.http\n      .get(apiUrl, {\n        headers: this.authenticationService.getAuthHeaders(token),\n      })\n      .pipe(\n        map((response: HttpResponse) => {\n          return response;\n        })\n      );\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "http",
            "type": "HttpClient"
          },
          {
            "name": "authenticationService",
            "type": "AuthenticationService"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "http",
            "type": "HttpClient",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "authenticationService",
            "type": "AuthenticationService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    }
  ],
  "classes": [
    {
      "name": "AppPage",
      "id": "class-AppPage-ceea6cad3a8c0bff6a64b18e52e9b45f",
      "file": "projects/showcase/e2e/src/app.po.ts",
      "type": "class",
      "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('showcase-root .content span')).getText() as Promise<string>;\n  }\n}\n",
      "properties": [],
      "methods": [
        {
          "name": "getTitleText",
          "args": [],
          "optional": false,
          "returnType": "Promise<string>",
          "typeParameters": [],
          "line": 8
        },
        {
          "name": "navigateTo",
          "args": [],
          "optional": false,
          "returnType": "Promise<unknown>",
          "typeParameters": [],
          "line": 4
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "HttpResponse",
      "id": "class-HttpResponse-94129b8263267b83bbfcd9de1159a839",
      "file": "projects/ng9-business-console/src/lib/models/authentication-model.ts",
      "type": "class",
      "sourceCode": "export interface User {\n  userID: string;\n  username: string;\n  fullName: string;\n  mobileNumber: string;\n  salt: string;\n  hash: string;\n  temporatySalt: string;\n  temporaryHash: string;\n  email: string;\n  completedRegistration: string;\n  registrationDate: number;\n  groupID: string;\n  lockoutCounter: number;\n  louckoutYN: boolean;\n  verified: boolean;\n  acceptedTermsAndConditions: boolean;\n  onBoardingCompleted: boolean;\n  businessID: string;\n}\n\nexport class HttpResponse {\n  success: boolean;\n  status: string;\n  message: string;\n  sessionID?: string;\n  data?: any;\n  token?: string;\n  error?: string;\n  user?: User;\n  errcode?: string;\n}\n",
      "properties": [
        {
          "name": "data",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 27
        },
        {
          "name": "errcode",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 31
        },
        {
          "name": "error",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 29
        },
        {
          "name": "message",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "sessionID",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 26
        },
        {
          "name": "status",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "success",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "token",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 28
        },
        {
          "name": "user",
          "type": "User",
          "optional": true,
          "description": "",
          "line": 30
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    }
  ],
  "directives": [],
  "components": [
    {
      "name": "AppComponent",
      "id": "component-AppComponent-65562b175398669a6bf8342d79569866",
      "file": "projects/showcase/src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "showcase-root",
      "styleUrls": ["./app.component.scss"],
      "styles": [],
      "templateUrl": ["./app.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "authenticationService",
          "type": "AuthenticationService",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [114]
        },
        {
          "name": "columns",
          "type": "Array<string>",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [114]
        },
        {
          "name": "data",
          "type": "Array<Datum>",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [114]
        },
        {
          "name": "isError",
          "defaultValue": "{\n    status: false,\n  }",
          "type": "IErrorMessage",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [114]
        },
        {
          "name": "productService",
          "type": "ProductService",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "getAllProduct",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68,
          "modifierKind": [114]
        },
        {
          "name": "getBusinessID",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 93,
          "modifierKind": [114]
        },
        {
          "name": "getToken",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 88,
          "modifierKind": [114]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38
        },
        {
          "name": "storeTokenAndStartTimer",
          "args": [
            {
              "name": "user",
              "type": "User"
            },
            {
              "name": "token",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "user",
              "type": "User",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "token",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n  ProductService,\n  Datum,\n  AuthenticationService,\n  User,\n} from '@ng9/business-console';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'showcase-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  public data: Array<Datum>;\n  public columns: Array<string>;\n  public isError: IErrorMessage = {\n    status: false,\n  };\n\n  constructor(\n    public productService: ProductService,\n    public authenticationService: AuthenticationService\n  ) {\n    this.columns = [\n      'status',\n      'productName',\n      'totalEarnings',\n      'activeCustomers',\n      'numOfBilling',\n      'ropstenNetworkOn',\n      'creationTimestamp',\n      'columnClicked',\n    ];\n  }\n\n  ngOnInit(): void {\n    this.authenticationService\n      .userAuthentication(environment.username, environment.password)\n      .then(async (response) => {\n        if (response.success) {\n          this.storeTokenAndStartTimer(response.data.user, response.data.token);\n          this.getAllProduct();\n        } else {\n          this.isError = {\n            status: true,\n            message: 'Authentication failed!',\n          };\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.isError = {\n          status: true,\n          message: error.error.message\n            ? error.error.message\n            : 'Invalid email/password OR might be server not found!',\n        };\n      });\n  }\n\n  public storeTokenAndStartTimer(user: User, token: string) {\n    localStorage.setItem('jwt_token', JSON.stringify({ token }));\n    localStorage.setItem('currentUser', JSON.stringify(user));\n  }\n\n  public getAllProduct() {\n    this.productService\n      .getProductList(this.getBusinessID(), this.getToken())\n      .subscribe(\n        (result: any) => {\n          const productData = result.data;\n          this.data =\n            result.success && productData && productData.length > 0\n              ? result.data\n              : [];\n        },\n        (error) => {\n          this.isError = {\n            status: true,\n            message: error.error.message || error.error[0].message,\n          };\n        }\n      );\n  }\n\n  public getToken(): string {\n    let jwtToken = localStorage.getItem('jwt_token');\n    return (jwtToken = jwtToken ? JSON.parse(jwtToken).token : '');\n  }\n\n  public getBusinessID(): string {\n    let userDetails = localStorage.getItem('currentUser');\n    return (userDetails = userDetails\n      ? JSON.parse(userDetails).businessID\n      : '');\n  }\n}\n\nexport interface IErrorMessage {\n  status?: boolean;\n  message?: string;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "p {\n  text-align: center;\n  display: block;\n  margin-top: 45px;\n  font-family: monospace;\n  color: #ff0000;\n}\n",
          "styleUrl": "./app.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "productService",
            "type": "ProductService"
          },
          {
            "name": "authenticationService",
            "type": "AuthenticationService"
          }
        ],
        "line": 20,
        "jsdoctags": [
          {
            "name": "productService",
            "type": "ProductService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "authenticationService",
            "type": "AuthenticationService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<ng9-business-console-top-nav></ng9-business-console-top-nav>\n<ng9-business-console-footer></ng9-business-console-footer>\n<ng9-business-console-product\n  [products]=\"data\"\n  [displayedColumns]=\"columns\"\n  *ngIf=\"!isError.status; else alertInfo\"\n>\n</ng9-business-console-product>\n<ng-template #alertInfo>\n  <p>\n    {{ isError?.message }}\n  </p>\n</ng-template>\n<router-outlet></router-outlet>\n"
    },
    {
      "name": "FooterComponent",
      "id": "component-FooterComponent-89cccb98ab727f3bc27b70f149a50623",
      "file": "projects/ng9-business-console/src/lib/components/footer/footer.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ng9-business-console-footer",
      "styleUrls": ["./footer.component.scss"],
      "styles": [],
      "templateUrl": ["./footer.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "title",
          "defaultValue": "'footer component works!'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng9-business-console-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n  title = 'footer component works!';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./footer.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 9
      },
      "implements": ["OnInit"],
      "templateData": "<h3>{{ title }}</h3>\n"
    },
    {
      "name": "ProductTableComponent",
      "id": "component-ProductTableComponent-0fcd3179c4f538d592dde7ef6730bd95",
      "file": "projects/ng9-business-console/src/lib/components/product-table/product-table.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ng9-business-console-product",
      "styleUrls": ["./product-table.component.scss"],
      "styles": [],
      "templateUrl": ["./product-table.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "displayedColumns",
          "line": 15,
          "type": "string[]"
        },
        {
          "name": "products",
          "defaultValue": "[]",
          "line": 12,
          "type": "Datum[]"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dataSource",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "jsdoctags": [
            {
              "name": "changes",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Datum } from '../../models/product-model';\n\n@Component({\n  selector: 'ng9-business-console-product',\n  templateUrl: './product-table.component.html',\n  styleUrls: ['./product-table.component.scss'],\n})\nexport class ProductTableComponent implements OnChanges {\n  @Input()\n  products: Datum[] = [];\n\n  @Input()\n  displayedColumns: string[];\n\n  public dataSource: any;\n  constructor() {}\n\n  ngOnChanges(changes: import('@angular/core').SimpleChanges): void {\n    if (changes.products && changes.products.currentValue) {\n      this.dataSource = new MatTableDataSource(this.products);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".main-container {\n  background-color: #fff;\n  border-radius: 10px;\n  border-width: 1px;\n  padding: 0px;\n  padding-bottom: 50px;\n  margin-bottom: 100px;\n  min-height: 70%;\n\n  h3,\n  h4 {\n    display: inline;\n    font-size: 18px;\n  }\n\n  .bm-header {\n    border-bottom: 1px solid #f2f2f2;\n  }\n\n  .bm-header-col {\n    padding-right: 20px;\n    padding-left: 13px;\n  }\n\n  .row-margin-top {\n    margin-top: 50px;\n  }\n\n  .row-table {\n    // overflow-x: scroll;\n    padding: 0 !important;\n  }\n\n  .row-padding {\n    padding-left: 3.2%;\n    padding-right: 3%;\n    padding-top: 15px;\n    padding-bottom: 5px;\n    margin-right: 0px;\n    margin-left: 0px;\n  }\n\n  .col-centered {\n    padding-left: 0px;\n    padding-right: 0px;\n    text-align: center;\n  }\n}\n\ntr:hover {\n  background-color: #dfe8fb;\n  cursor: pointer;\n  font-weight: 600;\n}\n\ntd {\n  font-weight: none !important;\n}\n\n@media only screen and (min-width: 1920px) {\n  .productHeading span {\n    padding-left: 70px;\n  }\n\n  .balance-container-white {\n    left: 55% !important;\n  }\n\n  .info-message:hover .balance-container-white {\n    line-height: 1.3;\n    padding-top: 7px;\n  }\n}\n\n.thead {\n  background: #ffffff;\n}\n\ntable {\n  border-bottom: 1px solid #e3ebf3;\n}\n\n.table td {\n  padding: 1rem;\n}\n\n.trHeader:hover {\n  background: none !important;\n}\n\n@media only screen and (max-width: 768px) {\n  .main-container {\n    .row-table {\n      margin-right: 10px;\n      margin-left: 10px;\n    }\n  }\n}\n\n////////////// table css //////////////\ntable {\n  width: 100%;\n}\n\ntd,\nth {\n  border: #e2e3e6;\n}\n\n.test-indicator {\n  width: 90%;\n  height: 60%;\n  text-align: right;\n  background-color: #ffefe9;\n  color: #f97841;\n  text-align: center;\n  font-size: 13px;\n  float: right;\n  margin-top: 8px;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-left: 30px;\n  padding-right: 30px;\n  border-radius: 3px;\n}\n\n.active-product,\n.testing-product,\n.inactive-product,\n.expired-product {\n  font-size: 8px;\n}\n\n.mat-sort-header-button,\n.mat-row.ng-star-inserted {\n  margin: 0 auto;\n  text-align: center;\n}\n\n.mat-column-productName > .mat-sort-header-container {\n  text-align: center;\n}\n\n.no-product {\n  text-align: center;\n  margin-top: 55px;\n}\n\n.mat-column-productName {\n  text-align: center;\n  font-size: 13px;\n}\n\ntable th td {\n  text-align: center;\n  vertical-align: middle;\n}\n\n::ng-deep .product-table .mat-header-cell .mat-sort-header-container {\n  justify-content: center;\n  padding: 16px;\n}\n\n::ng-deep .product-table .mat-cell {\n  padding: 0 12px 0 0;\n}\n\ntable thead th {\n  border-bottom: 1px solid #e3ebf3;\n}\n",
          "styleUrl": "./product-table.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "implements": ["OnChanges"],
      "templateData": "<div class=\"container-fluid main-container\">\n  <div class=\"row row-padding bm-header\">\n    <div class=\"col-sm-12 bm-header-col\">\n      <h4>Products</h4>\n    </div>\n  </div>\n  <div\n    class=\"row row-padding row-table product-table\"\n    *ngIf=\"products?.length > 0; else emptyProduct\"\n  >\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n      <!-- status Column -->\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n        <td mat-cell *matCellDef=\"let product\"></td>\n      </ng-container>\n\n      <!-- totalEarnings Column -->\n      <ng-container matColumnDef=\"productName\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"font-12\">\n          Product Name\n        </th>\n        <td mat-cell *matCellDef=\"let product\">\n          {{ product.productName }}\n        </td>\n      </ng-container>\n\n      <!-- totalEarnings Column -->\n      <ng-container matColumnDef=\"totalEarnings\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\n          Total Earnings\n        </th>\n        <td mat-cell *matCellDef=\"let product\" class=\"font-13\">\n          {{ product.totalEarnings / 100 | number: '1.2-5' }}\n        </td>\n      </ng-container>\n\n      <!-- activeCustomers Column -->\n      <ng-container matColumnDef=\"activeCustomers\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\n          Active Customers\n          <i\n            data-toggle=\"tooltip\"\n            class=\"fas fa-info-circle tooltip-icon\"\n            title=\"You can only delete (/remove) a Product as long as you\n      don't have any customers subscribed to it.\"\n            placement=\"top\"\n          ></i>\n        </th>\n        <td mat-cell *matCellDef=\"let product\" class=\"font-13\">\n          {{ product.activeCustomers }}\n        </td>\n      </ng-container>\n\n      <!-- numOfBilling Column -->\n      <ng-container matColumnDef=\"numOfBilling\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\n          No. of Billing Models\n        </th>\n        <td mat-cell *matCellDef=\"let product\" class=\"font-13\">\n          {{ product.numOfBilling }}\n        </td>\n      </ng-container>\n\n      <!-- ropstenNetworkOn Column -->\n      <ng-container matColumnDef=\"ropstenNetworkOn\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n        <td mat-cell *matCellDef=\"let product\" class=\"font-13\">\n          <label class=\"test-indicator\">Test</label>\n        </td>\n      </ng-container>\n\n      <!-- creationTimestamp Column -->\n      <ng-container matColumnDef=\"creationTimestamp\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Creation Date</th>\n        <td mat-cell *matCellDef=\"let product\" class=\"font-13\">\n          {{ product.creationTimestamp | date: 'shortDate' }}\n        </td>\n      </ng-container>\n\n      <!-- columnClicked button -->\n      <ng-container matColumnDef=\"columnClicked\" class=\"options-button\">\n        <th mat-header-cell *matHeaderCellDef class=\"columnClicked\"></th>\n        <td mat-cell *matCellDef=\"let product\" class=\"columnClicked-cell\"></td>\n      </ng-container>\n    </table>\n  </div>\n  <ng-template #emptyProduct>\n    <div class=\"no-product\">\n      <h2>No products are available!</h2>\n    </div>\n  </ng-template>\n</div>\n"
    },
    {
      "name": "TopNavComponent",
      "id": "component-TopNavComponent-9c16dc30f6043bcb5be013e6d5c5d264",
      "file": "projects/ng9-business-console/src/lib/components/top-nav/top-nav.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ng9-business-console-top-nav",
      "styleUrls": ["./top-nav.component.scss"],
      "styles": [],
      "templateUrl": ["./top-nav.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng9-business-console-top-nav',\n  templateUrl: './top-nav.component.html',\n  styleUrls: ['./top-nav.component.scss'],\n})\nexport class TopNavComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".menu-spacer {\n  flex: 1 1 auto;\n}\n",
          "styleUrl": "./top-nav.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button>\n      <img\n        alt=\"angular\"\n        src=\"https://material.angular.io/assets/img/homepage/angular-white-transparent.svg\"\n      />\n    </button>\n    <span>ng9-business-console-library</span> <span class=\"menu-spacer\"></span>\n\n    <button mat-button [matMenuTriggerFor]=\"belowMenu\">About Us</button>\n    <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n      <button mat-menu-item>Project Plan</button>\n      <button mat-menu-item>Current Progress</button>\n    </mat-menu>\n\n    <button mat-button>Sign In</button>\n    <button mat-button>Sign Up</button>\n  </mat-toolbar-row>\n</mat-toolbar>\n"
    }
  ],
  "modules": [
    {
      "name": "AppModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "AppRoutingModule"
            },
            {
              "name": "Ng9BusinessConsoleModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "AppRoutingModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FooterModule",
      "children": [
        {
          "type": "providers",
          "elements": [
            {
              "name": "FooterService"
            }
          ]
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FooterComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "MaterialModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FooterComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "MaterialModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "Ng9BusinessConsoleModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TopNavComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "FooterModule"
            },
            {
              "name": "MaterialModule"
            },
            {
              "name": "ProductTableModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FooterComponent"
            },
            {
              "name": "ProductTableComponent"
            },
            {
              "name": "TopNavComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ProductTableModule",
      "children": [
        {
          "type": "providers",
          "elements": [
            {
              "name": "ProductService"
            }
          ]
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ProductTableComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "MaterialModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ProductTableComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "config",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/product-table/config.ts",
        "type": "object",
        "defaultValue": "{\n  title: 'Product table',\n  component: ProductTableComponent,\n  decorators: [\n    withKnobs,\n    withA11y,\n    moduleMetadata({\n      imports: [CdkTableModule, CommonModule, MatTableModule],\n    }),\n  ],\n}"
      },
      {
        "name": "constant",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ng9-business-console/src/lib/utils/server-config.ts",
        "type": "object",
        "defaultValue": "{\n  socketUrl: 'http://localhost:3000',\n  apiPrefix: '/api/v2/console-auth/',\n  openApiPrefix: '/api/v2/open-auth/',\n}"
      },
      {
        "name": "context",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/showcase/src/test.ts",
        "type": "",
        "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/showcase/src/environments/environment.prod.ts",
        "type": "object",
        "defaultValue": "{\n  production: true\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/showcase/src/environments/environment.ts",
        "type": "object",
        "defaultValue": "{\n  production: false,\n  socketUrl: 'http://localhost:3000',\n  username: 'constantinos@pumapay.io',\n  password: '!Password12',\n}"
      },
      {
        "name": "mock",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "jest-config/globalMocks.ts",
        "type": "",
        "defaultValue": "() => {\n  let storage = {};\n  return {\n    getItem: key => (key in storage ? storage[key] : null),\n    setItem: (key, value) => (storage[key] = value || ''),\n    removeItem: key => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
      },
      {
        "name": "require",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/showcase/src/test.ts",
        "type": "literal type"
      }
    ],
    "functions": [
      {
        "name": "ngAdd",
        "file": "projects/ng9-business-console/schematics/ng-add/index.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "name": "_options",
            "type": "any"
          }
        ],
        "returnType": "Rule",
        "jsdoctags": [
          {
            "name": "_options",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "ProductTable",
        "file": "projects/ng9-business-console/schematics/product-table/index.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "name": "options"
          }
        ],
        "returnType": "Rule",
        "jsdoctags": [
          {
            "name": "options",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [],
    "enumerations": [],
    "groupedVariables": {
      "src/stories/product-table/config.ts": [
        {
          "name": "config",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/product-table/config.ts",
          "type": "object",
          "defaultValue": "{\n  title: 'Product table',\n  component: ProductTableComponent,\n  decorators: [\n    withKnobs,\n    withA11y,\n    moduleMetadata({\n      imports: [CdkTableModule, CommonModule, MatTableModule],\n    }),\n  ],\n}"
        }
      ],
      "projects/ng9-business-console/src/lib/utils/server-config.ts": [
        {
          "name": "constant",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ng9-business-console/src/lib/utils/server-config.ts",
          "type": "object",
          "defaultValue": "{\n  socketUrl: 'http://localhost:3000',\n  apiPrefix: '/api/v2/console-auth/',\n  openApiPrefix: '/api/v2/open-auth/',\n}"
        }
      ],
      "projects/showcase/src/test.ts": [
        {
          "name": "context",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/showcase/src/test.ts",
          "type": "",
          "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
        },
        {
          "name": "require",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/showcase/src/test.ts",
          "type": "literal type"
        }
      ],
      "projects/showcase/src/environments/environment.prod.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/showcase/src/environments/environment.prod.ts",
          "type": "object",
          "defaultValue": "{\n  production: true\n}"
        }
      ],
      "projects/showcase/src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/showcase/src/environments/environment.ts",
          "type": "object",
          "defaultValue": "{\n  production: false,\n  socketUrl: 'http://localhost:3000',\n  username: 'constantinos@pumapay.io',\n  password: '!Password12',\n}"
        }
      ],
      "jest-config/globalMocks.ts": [
        {
          "name": "mock",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "jest-config/globalMocks.ts",
          "type": "",
          "defaultValue": "() => {\n  let storage = {};\n  return {\n    getItem: key => (key in storage ? storage[key] : null),\n    setItem: (key, value) => (storage[key] = value || ''),\n    removeItem: key => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
        }
      ]
    },
    "groupedFunctions": {
      "projects/ng9-business-console/schematics/ng-add/index.ts": [
        {
          "name": "ngAdd",
          "file": "projects/ng9-business-console/schematics/ng-add/index.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "name": "_options",
              "type": "any"
            }
          ],
          "returnType": "Rule",
          "jsdoctags": [
            {
              "name": "_options",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/ng9-business-console/schematics/product-table/index.ts": [
        {
          "name": "ProductTable",
          "file": "projects/ng9-business-console/schematics/product-table/index.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "name": "options"
            }
          ],
          "returnType": "Rule",
          "jsdoctags": [
            {
              "name": "options",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {},
    "groupedTypeAliases": {}
  },
  "routes": {
    "name": "<root>",
    "kind": "module",
    "className": "AppModule",
    "children": [
      {
        "name": "routes",
        "filename": "projects/showcase/src/app/app-routing.module.ts",
        "module": "AppRoutingModule",
        "children": [],
        "kind": "module"
      }
    ]
  },
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "jest-config/globalMocks.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "mock",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/schematics/ng-add/index.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "ngAdd",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/schematics/product-table/index.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "ProductTable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/schematics/product-table/schema.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Schema",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/components/footer/footer.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FooterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/components/product-table/product-table.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProductTableComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/components/top-nav/top-nav.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TopNavComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/models/authentication-model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "HttpResponse",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/models/authentication-model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "User",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/models/product-model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Datum",
        "coveragePercent": 0,
        "coverageCount": "0/21",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/services/authentication/authentication.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "AuthenticationService",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/services/footer/footer.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "FooterService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/services/product/product.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ProductService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ng9-business-console/src/lib/utils/server-config.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "constant",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/showcase/e2e/src/app.po.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AppPage",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/showcase/src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "projects/showcase/src/app/app.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IErrorMessage",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/showcase/src/environments/environment.prod.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/showcase/src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/showcase/src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "context",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/showcase/src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "require",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/product-table/config.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "config",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
